buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "org.spongepowered.mixin"

version = '1.18.2-1.0'
group = 'net.foundwiz.largemeals'
archivesBaseName = 'largemeals'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.jaackson.me"
    }
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'largemeals'

            mods {
                largemeals {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'largemeals'

            mods {
                largemeals {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'largemeals'

            mods {
                largemeals {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'largemeals', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                largemeals {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.0'

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.0.193:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.0.193")

    implementation fg.deobf("curse.maven:farmersdelight-398521:3765351")
    runtimeOnly fg.deobf("curse.maven:appleskin-248787:3686482")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "largemeals",
                "Specification-Vendor"    : "foundwiz",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "largemeals",
                "Implementation-Version"  : "1.18.2-1.0",
                "Implementation-Vendor"   : "foundwiz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}